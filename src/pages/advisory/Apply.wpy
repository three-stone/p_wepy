<style lang="less">
  @import '../../styles/common.less';
page{
	background:#f5f5f5;
}
.cells{
    margin-top:16rpx;
}
.cell{
	height:84rpx;
}
.text{
    height:415rpx;
}
.cell .cell_hd,textarea{
    height:100%;
    width:100%;
}
textarea{
  min-height:200rpx;
  font-size:28rpx;
}
.pl{
    font-size:28rpx;
    color:rgba(153,153,153,1);
}
.xz{
    padding:0 30rpx 10rpx 30rpx;
    width:100%;
    box-sizing:border-box;
    text-align:right;
    color:#999;
    font-size:24rpx;
}
  .sub_btn{
    width:628rpx;
    height:90rpx;
    background:rgba(38,183,188,1);
    border-radius:45rpx;
    color:#fff;
    font-size:32rpx;
    text-align:center;
    line-height:90rpx;
    margin:0 auto;
    margin-top:236rpx;
  }
  .addpic{
    width:150rpx;
    height:150rpx;
    margin-right:40rpx;
  }
  .desc{
    color:#999;
  }
</style>
<template>
  <view class="container">
	<view class="cells">
        <view class="cell text">
        	<view class='cell_hd'>
        		<textarea @input='InputChange' placeholder="请详细描述您的症状、疾病和身体状况，便于医生更准确的分析（10-500字），为保护您的隐私，请勿在咨询中透露您的真实姓名、手机号、微信等信息" auto-height  placeholder-class='pl'  maxlength='500'></textarea>
        	</view>	
        </view>
        <view class='cell' style="height:200rpx;">
          <view @tap='uploadpic'>
            <image class="addpic" src="{{ url == '' ? '../../assets/images/d_icon_pic_add.png' : url}}"></image>
          </view>
          <view class="cell__bd">
              <view class='desc'>上传相关图片（检查单、CT、病历、患处、药品等），确保你的隐私</view>
          </view>
        </view>
    </view>
     <view class="sub_btn" @tap='submit'>提交</view>	
  </view>
</template>
<script>
  import wepy from 'wepy'
  import khsy from '../../internal/khsy.js'
  import { showTost } from '../../utils/common'
  import webim from '../../utils/webim.js'
  export default class ChoicePerson extends wepy.page {
    config = {
      navigationBarTitleText: '咨询申请'
    }

    components = {
    }
    data = {
      text: '',
      url: '',
      id: ''
    }

    computed = {
    }

    methods = {
      InputChange(e) {
        this.text = e.detail.value
      },
      uploadpic () {
        let that = this
        wx.chooseImage({
          count: 1,
          sizeType: ['compressed'],
          sourceType: ['album', 'camera'],
          success: function (res) {
            console.log(1)
            let tempFilePaths = res.tempFilePaths
            wepy.showToast({
              icon: 'loading',
              title: '正在上传'
            })
            console.log(res)
            wx.uploadFile({
              url: khsy.$request_url + 'upload/uploadFile',
              filePath: tempFilePaths[0],
              name: 'file',
              success: function(res) {
                if (res.statusCode !== 200) {
                  wepy.showModal({
                    title: '提示',
                    content: '上传失败',
                    showCancel: false
                  })
                  return
                }
                let data = JSON.parse(res.data)
                console.log(data)
                if (data.result === '1') {
                  that.url = data.resultData
                  that.$apply()
                }
              },
              fail: function (e) {
              },
              complete: function () {
                wepy.hideToast() // 隐藏Toast
              }
            })
          },
          fail: function (res) {
            console.log(res)
          }
        })
      },
      submit() {
        this.$redirect('./advisoryOL?text=' + this.text + '&imgurl=' + this.url + '&id=' + this.id)
      }
    }
    login () {
      let that = this
      let loginInfo = {
        'sdkAppID': 1400139758,   // 测试   1400133836
        'appIDAt3rd': 1400139758,
        'identifier': wepy.getStorageSync('memberId'),
        'identifierNick': wepy.getStorageSync('memberInfo').name,
        'accountType': 38919, // 测试   37261
        'selType': webim.SESSION_TYPE.C2C,
        'userSig': wepy.getStorageSync('memberInfo').imUserSign
      }
      //  监听连接状态回调变化事件
      let onConnNotify = function (resp) {
        let info
        switch (resp.ErrorCode) { // 链接状态码
          case webim.CONNECTION_STATUS.ON:
            webim.Log.warn('建立连接成功: ' + resp.ErrorInfo)
            break
          case webim.CONNECTION_STATUS.OFF:
            info = '连接已断开，无法收到新消息，请检查下您的网络是否正常: ' + resp.ErrorInfo
            webim.Log.warn(info)
            break
          case webim.CONNECTION_STATUS.RECONNECT:
            info = '连接状态恢复正常: ' + resp.ErrorInfo
            webim.Log.warn(info)
            break
          default:
            webim.Log.error('未知连接状态: =' + resp.ErrorInfo) // 错误信息
            break
        }
      }
      let options = {
        'isAccessFormalEnv': true,  //  是否访问正式环境，默认访问正式，选填
        'isLogOn': false  //  是否开启控制台打印日志,默认开启，选填
      }
    //  监听新消息事件     注：其中参数 newMsgList 为 webim.Msg 数组，即 [webim.Msg]。
      let selSess = null
      function onMsgNotify(newMsgList) {
        let sess
        let newMsg
        // 获取所有聊天会话
        let sessMap = webim.MsgStore.sessMap()
        for (let j in newMsgList) { //  遍历新消息
          newMsg = newMsgList[j]
         // console.log(newMsg.getSession().id())
          console.log(that.selToID)
          if (newMsg.getSession().id() === that.selToID) {  // 为当前聊天对象的消息
            selSess = newMsg.getSession()
            // 在聊天窗体中新增一条消息
            // console.warn(newMsg)
           // that.addMsg(newMsg)
          }
        }
        //  消息已读上报，以及设置会话自动已读标记
        webim.setAutoRead(selSess, true, true)
        for (let i in sessMap) {
          sess = sessMap[i]
          if (that.selToID !== sess.id()) { //  更新其他聊天对象的未读消息数
            webim.updateSessDiv(sess.type(), sess.id(), sess.unread())
          }
        }
      }
      //  事件回调对象 监听事件
      let listeners = {
        'onConnNotify': onConnNotify, //  监听连接状态回调变化事件,必填
        'onMsgNotify': onMsgNotify  //  监听新消息(私聊，普通群(非直播聊天室)消息，全员推送消息)事件，必填
      }
      //  1v1单聊的话，一般只需要 'onConnNotify' 和 'onMsgNotify'就行了。
      webim.login(loginInfo, listeners, options, function (resp) {
        loginInfo.identifierNick = resp.identifierNick // 设置当前用户昵称
        console.log('登录成功')
      }, function (err) {
        console.log('登录失败------------------', err.ErrorInfo)
        showTost('登录失败')
      })
    }
    onLoad(e) {
      this.id = e.id
      if (!webim.checkLogin()) {
        this.login()
      }
    }
  }
</script>
