<style lang="less">
page{
  background:url(image/bg.png) 0 0 no-repeat;
  background-size:100% 100vh;
}
.container{
  width:100%;
  height:100vh;
}
.title{
  padding:91rpx 0 20rpx 0;
}
.q_name{
  font-size:46rpx;
  color:#fff;
  text-align:center;
  margin-bottom:6rpx
}
.q_time{
  font-size:26rpx;
  color:#fff;
    text-align:center;
}
.main{
  width:576rpx;
  background:#fff;
  min-height:700rpx;
  padding:24rpx 30rpx;
  padding-bottom:88rpx;
  box-sizing:border-box;
  margin:0 auto;
  border:4rpx solid #218B8E;
  position: relative;
}
.type{
  width:200rpx;
  height:60rpx;
  text-align:center;
  font-size:30rpx;
  line-height:49rpx;
  color:#fff;
  margin:0 auto;
}
.question,.c_item{
  padding:0 30rpx;
  font-size:26rpx;
  color:#333333;
  width:100%;
  box-sizing:border-box;
}
.question{
  margin-top:32rpx;
}
.one .c_item{
  margin-top:24rpx;
  height:69rpx;
  line-height:69rpx;
}
.one .selected{
  background:#26B7BC;
  border-radius:35rpx;
  color:#fff;
}
.one .type{
  background:url(image/singlechoicequestion.png) 0 0 no-repeat;
  background-size:200rpx 60rpx;
}
.many .type{
  background:url(image/multiplechoicequestions.png) 0 0 no-repeat;
  background-size:200rpx 60rpx;
}
.blank .type{
  background:url(image/completion.png) 0 0 no-repeat;
  background-size:200rpx 60rpx;
}
.many .c_item{
  padding:36rpx 0 0 67rpx;
}
.many .selected{
  font-size:26rpx;
  color:#26B7BC;
}
.blank .c_item input{
  width:100%;
  height:68rpx;
background:rgba(245,245,245,1);
border-radius:4rpx;
padding-left:32rpx;
margin-top:34rpx;
}
.btn_box{
  display:flex;
  width:516rpx;
  justify-content:space-between;
  position: absolute;
  bottom:30rpx;
    view{
      width:38rpx;
      height:58rpx;
    }
    image{
      height:100%;
      width:100%;
    }
}
.hol{
  color:#999;
  font-size:26rpx;
}
.btn_sub{
  width:496rpx;
  height:90rpx;
  margin:0 auto;
  margin-top:102rpx;
  display:flex;
  justify-content:space-between;
}
.btn_sub view{
    width:220rpx;
    height:90rpx;
    border:4rpx solid #218B8E;
    border-radius:4rpx;
    font-size:32rpx;
    text-align:center;
    line-height:90rpx;
}
.stop{
  background:rgba(32,160,164,1);
  color:#fff;
}
.sub{
  background:#fcfcfc;
  color:#26B7BC;
}
</style>
<template>
  <view class="container">
        <view class="title">
          <view class="q_name">慢性失眠诊断初筛表</view>
          <view class="q_time">整个答题过程可能需要2分钟（{{s_idx+1}}/{{questionList.length}}）</view>
        </view>
        <view class="main">
          <block wx:for="{{questionList}}" wx:key="{{index}}" wx:for-index="idx">
            <view class='one' wx:if="{{item.questionType == 1}}">
              <blcok wx:if="{{s_idx == idx}}">
                <view class="type">单选题</view>
                <view class='question'>
                  {{idx + 1}}、{{item.questionTitle}}
                </view>
                <view class="c_item {{item.r_idx == index?'selected':' '}}" wx:for="{{item.questionRadios}}" wx:key="*this" wx:for-item="li" data-index="{{index}}" @tap="click({{idx}},{{index}})">{{li.optionTitle}}</view>
              </blcok>
            </view>
            <!--多选-->
            <view class='many'  wx:if="{{item.questionType == 2}}">
              <blcok wx:if="{{s_idx == idx}}">
                <view class="type">多选题</view>
                <view class='question'>
                  {{idx}}、{{item.questionTitle}}
                </view>
                <view class="c_item {{m_idx==index?'selected':' '}}" wx:for="{{many_items}}" wx:key="*this" data-index="{{index}}" @tap="m_click">{{item}}</view>
              </blcok>
            </view>

            <view class='blank'  wx:if="{{item.questionType == 3}}">
              <blcok wx:if="{{s_idx == idx}}">
                <view class="type">填空题</view>
                <view class='question'>
                  {{idx}}、{{item.questionTitle}}
                </view>
                <view class="c_item">
                  <input type="text" placeholder="请填写" placeholder-class="hol" data-index="{{idx}}" @blur='b_input'></input>
                </view>
              </blcok>
            </view>
          </block>
          <!--填空-->
          <view class="btn_box" >
            <view class="left" @tap="prev">
              <image wx:if="{{s_idx !=0 }}" src="image/left_b.png"></image>
              <image wx:else src="image/left_h.png"></image>
            </view>
            <view class="right" @tap="next">
              <image wx:if="{{s_idx !=questionList.length-1}}" src="image/right_b.png"></image>
              <image wx:else src="image/right_h.png"></image>
            </view>
          </view>
        </view>
        <view class="btn_sub">
            <view class="stop">暂停</view>
            <view class="sub" @tap="submit">提交</view>
        </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { showTost } from '../../utils/common.js'
  export default class Answer extends wepy.page {
    config = {
      navigationBarTitleText: '测评答题'
    }
    components = {
    }

    data = {
      id: '',
      questionList: [],
      radioobj: [],
      one_items: ['A 无', 'B 无', 'C 无', 'D 无', 'E 无'],
      many_items: ['A 白天精神疲倦、萎靡不振；', 'B 注意力、记忆力下降；', 'C 社会、家庭、工作、学业的表现受到影响；', 'D 情绪障碍、烦躁不安；', 'E 出现多动、冲动、攻击等行为问题；', 'F 出现多动、冲动、攻击等行为问题；', 'G 动力、能量、主动性减少；', 'H 做事容易出现错误或事故倾向；'],
      r_idx: null,
      s_idx: 0,
      m_idx: null,
      answer_txt: '',
      time: null
    }

    computed = {
    }

    methods = {
      click(num, index) {
        let obj = {
          'answerRadio': {
            'questionOptionId': this.questionList[num].questionRadios[index].id
          },
          'questionId': this.questionList[num].questionId,
          'surveyId': this.id
        }
        let arry = this.radioobj
        this.questionList[num]['r_idx'] = index
        arry.splice(num, 1, obj)
        this.radioobj = arry
        if (this.s_idx < this.questionList.length - 1 && this.s_idx !== this.questionList.length) {
          let _this = this
          setTimeout(() => {
            _this.s_idx = _this.s_idx + 1
            _this.$apply()
          }, 200)
        }
      },
      m_click(e) {
        this.m_idx = e.currentTarget.dataset.index
      },
      b_input (e) {
        let index = e.currentTarget.dataset.index
        let text = e.detail.value
        let param = {
          'questionId': this.questionList[index].questionId,
          'surveyId': this.id,
          'answerFillblank': {
            'answer': text
          }
        }
        let arry = this.radioobj
        arry.splice(index, 1, param)
        this.radioobj = arry
      },
      prev () {
        if (this.s_idx > 0) {
          let num = this.s_idx
          num--
          this.s_idx = num
        }
      },
      next () {
        if (this.s_idx < this.questionList.length - 1) {
          let num = this.s_idx
          num++
          this.s_idx = num
        }
      },
      submit () {
        wepy.showLoading({
          title: '评估结果中',
          icon: 'loading',
          mask: true
        })
        if (this.radioobj.length === this.questionList.length) {
          let that = this
          let end = this.getTimes()
          let obj = {
            'answerInsertList': that.radioobj,
            'beginDate': that.time,
            'endDate': end,
            'memberId': wepy.getStorageSync('memberId')
          }
          let param = {
            url: `survey/answer/submitAnswer/${that.id}`,
            method: 'post',
            data: JSON.stringify(obj),
            header: {
              'Content-Type': 'application/json' // 默认值
            }
          }
          wepy.request(param).then((res) => {
            this.$redirect(`/pages/Evaluate/Result?id=${that.id}&AnswerId=` + res.content.surveyAnswerId)
          }).catch((res) => {
            showTost('提交失败请稍后再试！')
          })
        } else {
          showTost('答题未完成！')
        }
      }
    }

    events = {
    }
    getTimes () {
      let date = new Date()
      let year = date.getFullYear()
      let months = (date.getMonth() + 1) > 10 ? (date.getMonth() + 1) : '0' + (date.getMonth() + 1)
      let today = date.getDate() > 10 ? date.getDate() : '0' + date.getDate()
      let H = date.getHours() > 10 ? date.getHours() : '0' + date.getHours()
      let M = date.getMinutes() > 10 ? date.getMinutes() : '0' + date.getMinutes()
      let S = date.getSeconds() > 10 ? date.getSeconds() : '0' + date.getSeconds()
      let time = year + '-' + months + '-' + today + ' ' + H + ':' + M + ':' + S
      return time
    }

    onLoad(e) {
      var that = this
      this.id = e.id
      let param = {
        url: `survey/answer/survey/${e.id}`,
        method: 'GET',
        data: {},
        header: {
          'content-type': 'application/x-www-form-urlencoded' // 默认值
        }
      }
      wepy.request(param).then((res) => {
        console.log(res)
        that.s_idx = 0
        that.questionList = res.content.questionList
        this.$apply()
      }).catch((res) => {
        console.log(res)
      })
    }
    onShow() {
      this.time = this.getTimes()
    }
  }
</script>
